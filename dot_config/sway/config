# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Profile key
set $profile XF86Tools
# Light key
set $light XF86Launch6
# Lock key
set $lock XF86Launch5

## Window manager keys ##
# Close containers
# bindsym $alt+F4      kill
# bindsym $mod+Shift+q kill
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi --hide-scroll | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
focus_follows_mouse yes
output eDP-1 {
    resolution 2560x1440
    scale 1.5
    bg ~/wp/pawel-czerwinski-Lq3-u0MCLFI-unsplash.jpg fill
}
gaps inner 24
gaps outer 4
# font FiraCode 10
font pango:Fira Sans 12

default_border pixel 4
# titlebar_border_thickness 2
for_window [class=".*"] border pixel 4

# border_images.focused ~/.config/sway/borders/dropShadowDarkOffset.png
# border_images.focused_inactive ~/.config/sway/borders/dropShadowDarkOffset.png
# border_images.unfocused ~/.config/sway/borders/dropShadowDarkOffset.png
# border_images.urgent ~/.config/sway/borders/dropShadowDarkOffset.png

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
input type:touchpad {
    tap enabled
    natural_scroll enabled
}

input * {
    xkb_layout "us,de,ru"
    # xkb_variant "colemak,,typewriter"
    # xkb_options "grp:win_space_toggle"
    # xkb_options "ctrl:swapcaps_hyper,altwin:swap_alt_win"
    # xkb_layout "stupid"
}
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+i exec ~/bin/winfo

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

        # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


## Media and volume ##
# Volume
bindsym XF86MonBrightnessUp exec backlight_control +10
bindsym Shift+XF86MonBrightnessUp exec backlight_control 100
bindsym XF86MonBrightnessDown exec backlight_control -10
bindsym Shift+XF86MonBrightnessDown exec backlight_control 1

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1%
bindsym Shift+XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym Shift+XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym Shift+XF86AudioMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Media player controls
bindsym XF86AudioNext exec player=$(preferredplayer) && mpris-ctl next --player "$player" && pkill -SIGRTMIN+8 waybar
bindsym XF86AudioPrev exec player=$(preferredplayer) && mpris-ctl prev --player "$player" && pkill -SIGRTMIN+8 waybar
bindsym XF86AudioPlay exec player=$(preferredplayer) && mpris-ctl pp --player "$player" && pkill -SIGRTMIN+8 waybar
bindsym XF86AudioStop exec player=$(preferredplayer) && mpris-ctl stop --player "$player" && pkill -SIGRTMIN+8 waybar

bindsym Shift+XF86AudioPlay exec player=$(mpris-ctl list | alacritty-fzf) && preferredplayer "$player" && pkill -SIGRTMIN+8 waybar
bindsym Shift+XF86AudioStop exec preferredplayer none && pkill -SIGRTMIN+8 waybar


# Notifications
bindsym $mod+m         exec makoctl dismiss
bindsym $mod+shift+m   exec makoctl dismiss -a
bindsym $mod+control+m exec makoctl invoke

## Services keybinds ##
# Lock the screen
bindsym $lock exec ~/.config/sway/swaylock.sh --screenshots

# Toggle waybar visibility
bindsym Shift+$lock exec killall waybar -s USR1

# Change color scheme (flavours), using fzf alacritty
bindsym $light exec old="$(flavours current)" && \
                    flavours list -l | alacritty-fzf --preview='flavours apply -l {}' || \
                    flavours apply "${old}" && \
                    flavours apply "$(flavours current)"

# Change to random scheme
bindsym Shift+$light exec flavours apply
# Toggle dark/light mode
bindsym $alt+$light exec darkmode

# Screenshot a monitor
bindsym --release Print exec geometry=$(slurp -ro) && grim -g "${geometry}" - | wl-copy && shutter_sound
bindsym --release Shift+Print exec geometry=$(slurp -ro) && sleep 4 && grim -g "${geometry}" - | wl-copy && shutter_sound

# Screenshot a window
bindsym --release $alt+Print exec geometry=$(swaymsg -t get_tree | jq -r '.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | slurp) && grim -g "${geometry}" - | wl-copy && shutter_sound
bindsym --release Shift+$alt+Print exec geometry=$(swaymsg -t get_tree | jq -r '.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | slurp) && sleep 4 && grim -g "${geometry}" - | wl-copy && shutter_sound

# Screenshot selection
bindsym --release $mod+Print exec ~/bin/scwot 
bindsym --release Shift+$mod+Print exec geometry=$(slurp) && sleep 4 && grim -g "${geometry}" - | wl-copy && shutter_sound

# Image clipboard upload
bindsym --release Ctrl+Print exec notify-send "Uploading" -i upload-media -t 3000 && \
    link=$(wl-paste | imageupload) && \
    wl-copy "$link" && \
    notify-send "Upload successful" "$link" -i edit-copy -t 4000 || \
    notify-send "Error" "No image received" -i error -t 6000



# Screencast
bindsym --release Pause exec systemctl --user is-active --quiet screencast && \
    systemctl --user stop screencast || systemctl --user start screencast



assign [class="Slack"] 4
assign [class="firefox"] 3
assign [app_id="q4wine"] 9


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
exec_always 'pkill waybar; waybar'
exec_always ~/bin/gamma
#
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }
# Start flavours
## Base16 Synth Midnight Terminal Dark
# Author: Michaël Ball (http://github.com/michael-ball/)

set $base00 #050608
set $base01 #1a1b1c
set $base02 #28292a
set $base03 #474849
set $base04 #a3a5a6
set $base05 #c1c3c4
set $base06 #cfd1d2
set $base07 #dddfe0
set $base08 #b53b50
set $base09 #ea770d
set $base0A #c9d364
set $base0B #06ea61
set $base0C #42fff9
set $base0D #03aeff
set $base0E #ea5ce2
set $base0F #cd6320
# End flavours
## Window decoration
# class                     border      backgr.     text      indicator c_brdr
client.focused              $base08     $base00     $base08   $base08   $base08
client.unfocused            $base07     $base00     $base01   $base00   $base03
client.focused_inactive     $base05     $base00     $base05   $base05   $base05
client.urgent               $base09     $base00     $base04   $base09   $base0E
include ~/.config/sway/config.d/*
